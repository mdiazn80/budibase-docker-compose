version: '3.7'

services:
  bbapp:
    build:
      context: budibase/bbapp
      args:
        BBAPP_VERSION: $BBAPP_VERSION
    hostname: bbapp
    container_name: bbapp
    environment:
      SELF_HOSTED: 1
      COUCH_DB_URL: http://${COUCH_DB_USER}:${COUCH_DB_PASSWORD}@bbcouchdb:5984
      WORKER_URL: http://bbworker:4003
      MINIO_URL: http://bbminio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      INTERNAL_API_KEY: ${INTERNAL_API_KEY}
      BUDIBASE_ENVIRONMENT: ${BUDIBASE_ENVIRONMENT}
      PORT: 4002
      JWT_SECRET: ${JWT_SECRET}
      LOG_LEVEL: info
      SENTRY_DSN: https://a34ae347621946bf8acded18e5b7d4b8@o420233.ingest.sentry.io/5338131
      ENABLE_ANALYTICS: "true"
      REDIS_URL: bbredis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - bbworker
      - bbredis
    networks:
      - budibase-network

  bbworker:
    build:
      context: budibase/bbworker
      args:
        BBWORKER_VERSION: $BBWORKER_VERSION
    hostname: bbworker
    container_name: bbworker
    environment:
      SELF_HOSTED: 1
      PORT: 4003
      CLUSTER_PORT: ${MAIN_PORT}
      JWT_SECRET: ${JWT_SECRET}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_URL: http://bbminio:9000
      APPS_URL: http://bbapp:4002
      COUCH_DB_USERNAME: ${COUCH_DB_USER}
      COUCH_DB_PASSWORD: ${COUCH_DB_PASSWORD}
      COUCH_DB_URL: http://${COUCH_DB_USER}:${COUCH_DB_PASSWORD}@bbcouchdb:5984
      SENTRY_DSN: https://a34ae347621946bf8acded18e5b7d4b8@o420233.ingest.sentry.io/5338131
      INTERNAL_API_KEY: ${INTERNAL_API_KEY}
      REDIS_URL: bbredis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - bbredis
      - bbminio
      - bbcouch-init
    networks:
      - budibase-network

  bbminio:
    build:
      context: budibase/minio
      args:
        MINIO_VERSION: $MINIO_VERSION
    hostname: bbminio
    container_name: bbminio
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BROWSER: "off"
    command: server /data
    volumes:
      - type: volume
        source: bbminio_data
        target: /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - budibase-network

  bbproxy:
    build:
      context: budibase/bbproxy
      args:
        BBPROXY_VERSION: $BBPROXY_VERSION
    hostname: bbproxy
    container_name: bbproxy
    restart: unless-stopped
    ports:
      - "${MAIN_PORT}:10000"
    depends_on:
      - bbminio
      - bbworker
      - bbapp
      - bbcouchdb
    networks:
      - budibase-network

  bbcouchdb:
    build:
      context: budibase/couchdb3
      args:
        BBCOUCHDB_VERSION: $BBCOUCHDB_VERSION
    hostname: bbcouchdb
    container_name: bbcouchdb
    environment:
      - COUCHDB_PASSWORD=${COUCH_DB_PASSWORD}
      - COUCHDB_USER=${COUCH_DB_USER}
    volumes:
      - type: volume
        source: bbcouchdb3_data
        target: /opt/couchdb/data
    networks:
      - budibase-network

  bbcouch-init:
    build:
      context: budibase/curl
      args:
        CURL_VERSION: $CURL_VERSION
    hostname: bbcouch-init
    container_name: bbcouch-init
    environment:
      PUT_CALL: "curl -u ${COUCH_DB_USER}:${COUCH_DB_PASSWORD} -X PUT bbcouchdb:5984"
    depends_on:
      - bbcouchdb
    command: ["sh","-c","sleep 10 && $${PUT_CALL}/_users && $${PUT_CALL}/_replicator; fg;"]
    networks:
      - budibase-network

  bbredis:
    build:
      context: budibase/redis
      args:
        REDIS_VERSION: $REDIS_VERSION
    hostname: bbredis
    container_name: bbredis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - type: volume
        source: bbredis_data
        target: /data
    networks:
      - budibase-network

  bbwatchtower:
    build:
      context: budibase/watchtower
      args:
        WATCHTOWER_VERSION: $WATCHTOWER_VERSION
    hostname: bbwatchtower
    container_name: bbwatchtower
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    command: --debug --http-api-update bbapp bbworker bbproxy
    environment:
      - WATCHTOWER_HTTP_API=true
      - WATCHTOWER_HTTP_API_TOKEN=budibase
      - WATCHTOWER_CLEANUP=true
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    networks:
      - budibase-network

networks:
  budibase-network:
    driver: bridge

volumes:
  bbcouchdb3_data:
    driver: local
  bbminio_data:
    driver: local
  bbredis_data:
    driver: local